ylab = "Residuals",
main = "Homoskedasticity of residuals")
abline(h = 0)
# perform diagnostic plot to check for normality of residuals
qqnorm(timcal.reg$residuals, main = "Normal residula distribution")
qqline(timcal.reg$residuals)
# give an overall title
mtext("Diagnostic plots for linear regression analysis", outer = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
par(mfrow = c(1,2),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
pdf('FinalVSProject.pdf', paper = 'a4R')
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
# plot the data
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
par(mfrow = c(1,0),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
pdf('FinalVSProject.pdf', paper = 'a4R')
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
# plot the data
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
par(mfrow = c(1,0))
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
pdf('FinalVSProject.pdf', paper = 'a4R')
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
# plot the data
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
par(mfrow = c(1,0))
# plot the data
pdf('FinalVSProject.pdf', paper = 'a4R')
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
# plot the data
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
pdf('FinalVSProject.pdf', paper = 'a4R')
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
par(mfrow = c(1,0))
# plot the data
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
pdf('FinalVSProject.pdf')
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
par(mfrow = c(1,0))
# plot the data
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
pdf('FinalVSProject.pdf')
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
par(mfrow = c(1,0))
# plot the data
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
par(mfrow = c(1,0))
# plot the data
pdf('FinalVSProject.pdf')
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
# plot the data
pdf('FinalVSProject.pdf')
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
# plot the data
pdf('FinalVSProject.pdf')
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
# import and view dataset
timevscal <- read.csv("Timevscalories.csv")
timcal <- tbl_df(timevscal)
timcal
# plot the data
par(mfrow = c(1,0),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
plot(timcal$calories~timcal$time,
main = "Relationship between an amateur runner's running time and calories consumed",
ylab = "Calories Consumed (cal)",
xlab = "Running Time (s)")
p <- qplot(x = time,
y = calories,
data = timcal,
main = "Relationship between an amateur runner's running time and calories consumed",
ylab = "Calories Consumed (cal)",
xlab = "Running Time (s)")
# Calculate slope and intercept of line of best fit
timcal.coef <- coef(lm(calories~time, data = timcal))
timcal.coef
# perform a Pearson Correlation and print the summary statistics
timcal.cor <- with(timcal, cor.test(method = 'pearson', x = time, y = calories))
timcal.cor
# annotate r and p values onto the plot
p + annotate("text", x = 2150, y = 420, label = "r = -0.7") + annotate("text", x = 2150, y = 410, label = "p = 0.002") + geom_abline(intercept = 939.3, slope = -0.28)
# to view the subsequent diagnostic graphs in a single plot
par(mfrow = c(1,2),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
# perform and print  summary of linear regression
timcal.reg <- lm(calories~time, data = timcal)
summary(timcal.reg)
# plots diagnostic plots for linear regression
plot(x = timcal.reg$fitted.values,
y = timcal.reg$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Homoskedasticity of residuals")
abline(h = 0)
# perform diagnostic plot to check for normality of residuals
qqnorm(timcal.reg$residuals, main = "Normal residula distribution")
qqline(timcal.reg$residuals)
# give an overall title
mtext("Diagnostic plots for linear regression analysis", outer = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
# import and view the dataset
temp <- read.csv("Body Temp.csv")
btemp <- tbl_df(temp)
temp
# explore the data with plots
plot(temp$male~temp$body_temperature,
col="red",
main = "Mean oral body temperature  and heart rate at rest in male and female students",
ylab = " Heart Rate (beats per minute)",
xlab = "Oral Body Temperature")
points(temp$female)
legend(37.5,85, c("Male", "Female"), fill = c("red", "black"))
# run and print Statistical test (male heart rate versus oral body temperature)
library(knitr)
# import and view the dataset
temp <- read.csv("Body Temp.csv")
# Chunk 1: Q1_BodyTemperature
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
# import and view the dataset
temp <- read.csv("Body Temp.csv")
btemp <- tbl_df(temp)
temp
# explore the data with plots
plot(temp$male~temp$body_temperature,
col="red",
main = "Mean oral body temperature  and heart rate at rest in male and female students",
ylab = " Heart Rate (beats per minute)",
xlab = "Oral Body Temperature")
points(temp$female)
legend(37.5,85, c("Male", "Female"), fill = c("red", "black"))
# run and print Statistical test (male heart rate versus oral body temperature)
# Chunk 2: Q2_Handedness_and_ataxic_gait
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
# import and view the dataset
HandAtax <- read.csv("HandednessAtaxia.csv")
handatax<- tbl_df(HandAtax)
handatax
# explore dataset with plots
boxplot(handatax$first_stumble~handatax$handedness)
# to plot subsequent graphs in a single plot
par(mfrow = c(1,2),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
mosaicplot(handatax$handedness~handatax$first_stumble,
main = "Handedness against position of first stumble",
ylab = "First Stumble (1= rightwards, 2 = leftwards)",
xlab = "Handedness (1 = right-handed, 2 = left-handed)")
mosaicplot(handatax$final_position~handatax$handedness,
main = "Handedness against final position",
ylab = "Final Stimble (1= rightwards, 2 = leftwards)",
xlab = "Handedness (1 = right-handed, 2 = left-handed)")
# Statistical Test and co (hadedness against first stumble)
wilcox.test(first_stumble~handedness,
data = handatax,
paired = FALSE)
# Statistical Test and co (hadedness against first stumble)
wilcox.test(final_position~handedness,
data = handatax,
paired = FALSE)
# so that subsequent graphs are not faceted
par(mfrow = c(1,1),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
# Chunk 3: Question 3
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
# import and view dataset
timevscal <- read.csv("Timevscalories.csv")
timcal <- tbl_df(timevscal)
timcal
# plot the data
par(mfrow = c(1,0),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
plot(timcal$calories~timcal$time,
main = "Relationship between an amateur runner's running time and calories consumed",
ylab = "Calories Consumed (cal)",
xlab = "Running Time (s)")
p <- qplot(x = time,
y = calories,
data = timcal,
main = "Relationship between an amateur runner's running time and calories consumed",
ylab = "Calories Consumed (cal)",
xlab = "Running Time (s)")
# Calculate slope and intercept of line of best fit
timcal.coef <- coef(lm(calories~time, data = timcal))
timcal.coef
# perform a Pearson Correlation and print the summary statistics
timcal.cor <- with(timcal, cor.test(method = 'pearson', x = time, y = calories))
timcal.cor
# annotate r and p values onto the plot
p + annotate("text", x = 2150, y = 420, label = "r = -0.7") + annotate("text", x = 2150, y = 410, label = "p = 0.002") + geom_abline(intercept = 939.3, slope = -0.28)
# to view the subsequent diagnostic graphs in a single plot
par(mfrow = c(1,2),
mar = c(4, 4, 2, 1),
oma = c(0, 0, 1, 0))
# perform and print  summary of linear regression
timcal.reg <- lm(calories~time, data = timcal)
summary(timcal.reg)
# plots diagnostic plots for linear regression
plot(x = timcal.reg$fitted.values,
y = timcal.reg$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Homoskedasticity of residuals")
abline(h = 0)
# perform diagnostic plot to check for normality of residuals
qqnorm(timcal.reg$residuals, main = "Normal residula distribution")
qqline(timcal.reg$residuals)
# give an overall title
mtext("Diagnostic plots for linear regression analysis", outer = TRUE)
# Chunk 4: Q4
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
foo <- rnorm(10000, mean = 60, sd = 3) # final mark
bar <- rnorm(10000, mean = 68, sd = 5) # project mark
baz <- rep(seq(from = 1997, to = 2006), each = 1) # years
year <- sample(baz, 150, replace = TRUE,
prob = c(0.05, 0.05, 0.08, 0.08,
0.1, 0.13, 0.14, 0.13, 0.12, 0.12))
project_mark <- sample(bar, 150, replace = TRUE)
final_mark <- sample(foo, 150, replace = TRUE)
plot_data <- data_frame(year = year,
project_mark = round(project_mark, 1),
final_mark = round(final_mark, 1)) %>%
arrange(year)
# view the dataset
plot_data
# plot the data
# use the gather function and change the "year" column class (tidying)
data_tidy <- plot_data %>%
mutate(year = factor(year)) %>%
gather(key = key, value = value, -year) %>%
arrange(year)
# plot the data
pdf('FinalVSProject.pdf')
with(data_tidy, boxplot(value ~ key,
main = "Comparison between final and project marks(%) between the years 1997 and 2006 for a BSc Honours in Physiology course",
ylab = "Percentage"))
